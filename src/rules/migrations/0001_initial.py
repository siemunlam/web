# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-15 16:15
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ajuste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.SmallIntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'ajustes',
                'ordering': ['-valor'],
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=25, unique=True, verbose_name='descripción')),
                ('prioridad', models.PositiveSmallIntegerField(unique=True)),
                ('color', models.CharField(max_length=7, unique=True)),
            ],
            options={
                'verbose_name': 'categoría',
                'verbose_name_plural': 'categorías',
                'ordering': ['prioridad'],
            },
        ),
        migrations.CreateModel(
            name='FactorDeAjuste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=50, unique=True, verbose_name='descripción')),
            ],
            options={
                'verbose_name': 'factor de ajuste',
                'verbose_name_plural': 'factores de ajuste',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='FactorDePreCategorizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=50, unique=True, verbose_name='descripción')),
            ],
            options={
                'verbose_name': 'factor de pre-categorización',
                'verbose_name_plural': 'factores de pre-categorización',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='ReglaDeAjuste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prioridad', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(999)])),
            ],
            options={
                'verbose_name': 'Regla de ajuste',
                'verbose_name_plural': 'Reglas de ajuste',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ReglaDePreCategorizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prioridad', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(999)])),
            ],
            options={
                'verbose_name': 'Regla de pre-categorización',
                'verbose_name_plural': 'Reglas de pre-categorización',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ValorDeFactorDeAjuste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=50, verbose_name='descripción')),
                ('factorDeAjuste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.FactorDeAjuste', verbose_name='factor de ajuste')),
            ],
            options={
                'verbose_name': 'Valor de factor de ajuste',
                'verbose_name_plural': 'Valores de factor de ajuste',
                'ordering': ['factorDeAjuste'],
            },
        ),
        migrations.CreateModel(
            name='ValorDeFactorDePreCategorizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=50, verbose_name='descripción')),
                ('factorDePreCategorizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.FactorDePreCategorizacion', verbose_name='factor de pre-categorización')),
            ],
            options={
                'verbose_name': 'Valor de factor de pre-categorización',
                'verbose_name_plural': 'Valores de factor de pre-categorización',
                'ordering': ['factorDePreCategorizacion'],
            },
        ),
        migrations.AddField(
            model_name='regladeprecategorizacion',
            name='condicion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.ValorDeFactorDePreCategorizacion', unique=True, verbose_name='condición'),
        ),
        migrations.AddField(
            model_name='regladeprecategorizacion',
            name='resultado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Categoria'),
        ),
        migrations.AddField(
            model_name='regladeajuste',
            name='condicion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.ValorDeFactorDeAjuste', unique=True, verbose_name='condición'),
        ),
        migrations.AddField(
            model_name='regladeajuste',
            name='resultado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Ajuste'),
        ),
        migrations.AlterUniqueTogether(
            name='valordefactordeprecategorizacion',
            unique_together=set([('descripcion', 'factorDePreCategorizacion')]),
        ),
        migrations.AlterUniqueTogether(
            name='valordefactordeajuste',
            unique_together=set([('descripcion', 'factorDeAjuste')]),
        ),
        migrations.AlterUniqueTogether(
            name='regladeprecategorizacion',
            unique_together=set([('resultado', 'prioridad')]),
        ),
        migrations.AlterUniqueTogether(
            name='regladeajuste',
            unique_together=set([('resultado', 'prioridad')]),
        ),
    ]
